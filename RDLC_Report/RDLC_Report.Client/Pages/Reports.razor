@page "/reports"
@rendermode InteractiveServer
@inject NavigationManager _nav

<PageTitle>Reports</PageTitle>
<div class="container">
    <form class="form">
        <div class="row">
            <div class="form-group col-sm">
                <label for="selectedStartDate">Start Date:</label>
                <input type="date" id="selectedStartDate" class="form-control" @bind="SelectedStartDate" />
            </div>

            <div class="form-group col-sm">
                <label for="selectedEndDate">End Date:</label>
                <input type="date" id="selectedEndDate" class="form-control" @bind="SelectedEndDate" />
            </div>

            <div class="form-group col-sm">
                <label for="flagStatus">Select Flag Status:</label>
                <select id="flagStatus" class="form-control" @bind="SelectedFlagStatus">
                    <option value="Open">Open</option>
                    <option value="Closed">Closed</option>
                    <option value="Active">Active</option>
                    <option value="None">None</option>
                    <option value="All">All</option>
                    <!-- Add other flag status options as needed -->
                </select>
            </div>
        </div>
        <div class="row">
            <div class="d-flex align-items-center gap-3 mt-2">
                <button @onclick="SubmitForm" class="btn btn-primary">Submit</button>
                <button @onclick="Download" class="btn btn-primary">Download</button>
            </div>
        </div>
    </form>
</div>

@code {
    private DateTime SelectedStartDate { get; set; } = DateTime.Now;
    private DateTime SelectedEndDate { get; set; } = DateTime.Now.AddDays(7); // Default end date
    private string SelectedFlagStatus { get; set; } = "All";
    private async void SubmitForm()
    {
        // var apiUrl = $"/api/reports?arrivalDateStart={SelectedStartDate:yyyy-MM-dd}&arrivalDateEnd={SelectedEndDate:yyyy-MM-dd}&flagStatus={SelectedFlagStatus}";
        // await _httpClient.GetAsync(apiUrl);
    }
    private async void Download()
    {
        
    }
}
